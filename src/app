import asyncio
import logging
from aiogram import Bot, Dispatcher
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from config import load_config
from handlers import send_chart

logging.basicConfig(level=logging.ERROR)


async def main():
    config = load_config()

    bot = Bot(token=config.tg_bot.token)
    dp = Dispatcher()

    dp.include_routers(send_chart.router)

    # region Запускаем запись цен на биток
    scheduler = AsyncIOScheduler({'apscheduler.timezone': 'UTC'})  # создаём инстанс шедулера
    from service.price import schedule_jobs
    await schedule_jobs(scheduler)
    scheduler.start()
    # endregion

    # Запускаем бота и пропускаем все накопленные входящие
    await bot.send_message(chat_id=config.tg_bot.admin_ids[-1], text='Bot was started!')
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
